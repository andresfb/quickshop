version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./config/docker/app.dockerfile
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./src/:/var/www
      - ./config/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src/:/var/www
      - ./config/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
        - ${MYSQL_PORT}:3306
    volumes:
      - dbdata:/var/lib/mysql/
      - ./config/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    volumes:
      - ./config/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
      - ./config/phpmyadmin/sessions_ex.ini:/usr/local/etc/php/conf.d/sessions_ex.ini
    env_file:
      - .env
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8080:80"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local